<MudStack Class="mx-2 my-4"
          AlignItems="AlignItems.Center"
          Justify="Justify.FlexStart"
          Style="height: calc(100vh - 100px);">

    @if (Tasks is null || !Tasks.Any())
    {
        <MudPaper Class="d-flex align-center justify-center mud-width-full" Elevation="0" Style="min-height: 50vh;">
            <MudStack AlignItems="AlignItems.Center" Spacing="2">
                <MudIcon Icon="@Icons.Material.Outlined.AssignmentTurnedIn" Size="Size.Large" Color="Color.Primary" />
                <MudText Typo="Typo.h6">No Tasks Available</MudText>
                <MudText Typo="Typo.body2" Style="text-align:center" Class="mud-text-secondary">
                    Once action items are created, they will be listed here.
                </MudText>
            </MudStack>
        </MudPaper>
    }
    else
    {
        @foreach (var task in Tasks)
        {
            <TaskCard Task="@task" OnMarkDone="MarkAsDone" OnEditTask="EditTask" OnDeleteTask="DeleteTask" />
        }
    }
</MudStack>

@code {
    [Parameter]
    public List<ActionItem> Tasks { get; set; } = new();

    private void MarkAsDone(ActionItem task)
    {
        // Add logic to handle marking the task as done
    }

    private void EditTask(ActionItem task)
    {
        // Add logic to handle editing the task
    }

    private void DeleteTask(ActionItem task)
    {
        // Add logic to handle deleting the task
    }
}