<MudPaper Class="pa-4 rounded-lg" Elevation="2" Style="width:100%; border-left: 5px solid var(--mud-palette-primary);">
    <MudGrid Spacing="2">
        <MudItem xs="12">
            <div class="d-flex align-center">
                <MudAvatar Color="Color.Primary" Class="mr-3">
                    @if (!string.IsNullOrEmpty(Task.Assignee))
                    {
                        @Task.Assignee.FirstOrDefault()
                    }
                </MudAvatar>
                <div class="flex-grow-1">
                    <MudText Typo="Typo.body1" Class="font-weight-bold">@Task.Assignee</MudText>
                    @if (!string.IsNullOrEmpty(Task.DueDate))
                    {
                        <MudChip Size="Size.Small" Color="Color.Info" Variant="Variant.Text" Text="@($"Due: {Task.DueDate}")" T="string" />
                    }
                </div>
                <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                    <MudMenuItem Icon="@Icons.Material.Filled.Done" OnClick="@(() => MarkAsDone())">Mark as Done</MudMenuItem>
                    <MudMenuItem Icon="@Icons.Material.Filled.Edit" OnClick="@(() => EditTask())">Edit</MudMenuItem>
                    <MudMenuItem Icon="@Icons.Material.Filled.Delete" OnClick="@(() => DeleteTask())">Delete</MudMenuItem>
                </MudMenu>
            </div>
        </MudItem>

        <MudItem xs="12">
            <MudText Typo="Typo.h6" GutterBottom="true">@Task.ConversationTitle</MudText>
            <MudText Typo="Typo.body2">@Task.Task</MudText>
        </MudItem>

        <MudItem xs="12" Class="d-flex justify-end">
            <MudButton
                Variant="Variant.Text"
                Color="Color.Primary"
                Href="@($"/conversation/{Task.ConversationTitle}")"
                EndIcon="@Icons.Material.Filled.ArrowForward">
                View Source
            </MudButton>
        </MudItem>
    </MudGrid>
</MudPaper>

@code {
    [Parameter]
    public ActionItem Task { get; set; } = new();

    private void MarkAsDone()
    {
        // Add logic to handle marking the task as done
    }

    private void EditTask()
    {
        // Add logic to handle editing the task
    }

    private void DeleteTask()
    {
        // Add logic to handle deleting the task
    }
}